rdfa:
  - http://schema.org/docs/schema_org_rdfa.html
relations:
  - http://purl.org/goodrelations/v1.owl

#rdfa:
# - tests/data/schema.rdfa
#relations:
# - tests/data/v1.owl

# Debug mode
debug: true

# Automatically add an id field to entities
generateId: true

# Generate interfaces and use Doctrine's Resolve Target Entity feature
useInterface: false

# Emit a warning if a property is not derived from GoodRelations
checkIsGoodRelations:  false

# PHP namespaces
namespaces:
  entity: Portrino\PxSemantic\SchemaOrg

# The value of the phpDoc's @author annotation
author: Andre Wuttig<wuttig@portrino.de> # Example: KÃ©vin Dunglas <dunglas@gmail.com>

# Schema.org's types to use
types:
  Action:
  AdministrativeArea:
  AggregateRating:
    properties:
      ratingCount: ~
  Answer:
  Article:
    properties:
      articleBody: ~
      articleSection: ~
      pageEnd: { range: "Text" }
      pageStart: { range: "Text" }
      pagination: ~
      wordCount: ~
  Class:
  CollectionPage:
  Comment:
    properties:
      downvoteCount: ~
      parentItem: ~
      upvoteCount: ~
  ContactPoint:
    properties:
      areaServed: { range: "Text" }
      availableLanguage: ~
      contactType: ~
      email: ~
      faxNumber: ~
      telephone: ~
  Country:
  CreativeWork:
    properties:
      about: ~
      author: { range: "Person" }
      aggregateRating: ~
      comment: ~
      commentCount: ~
      dateCreated: { range: "DateTime" }
      datePublished: ~
      dateModified: { range: "DateTime" }
      headline: ~
      publisher: { range: "Organization" }
      text: ~
  Date:
  DateTime:
  DataType:
  Duration:
      properties:
        name: ~
  Energy:
  ImageObject:
    properties:
      url: ~
      height: { range: "Integer" }
      width: { range: "Integer" }
  Intangible:
  Integer:
  ItemList:
    properties:
      itemListElement: { range: "Text" }
  ItemPage:
  Language:
  Mass:
  MediaObject:
  Number:
  NutritionInformation:
    properties:
      servingSize: ~
      calories: ~
      fatContent: ~
  Organization:
    properties:
      address: { range: "PostalAddress" }
      aggregateRating: { range: "AggregateRating" }
      alumni: ~
      areaServed: { range: "Text" }
      award: ~
      brand: { range: "Organization" }
      contactPoint: { range: "ContactPoint" }
      contactPoints: ~
      department: ~
      dissolutionDate: ~
      duns: ~
      email: ~
      employee: ~
      faxNumber: ~
      founder: ~
      foundingDate: ~
      foundingLocation: ~
      globalLocationNumber: ~
      hasPOS: ~
      isicV4: ~
      legalName: ~
      location: { range: "Place" }
      logo: { range: "ImageObject" }
      member: { range: "Organization" }
      memberOf: { range: "Organization" }
      naics: ~
      numberOfEmployees: ~
      parentOrganization: ~
      review: ~
      subOrganization: ~
      taxID: ~
      telephone: ~
      vatID: ~
  Person:
    properties:
      additionalName: ~
      address: { range: "PostalAddress" }
      affiliation: ~
      alumniOf: { range: "Organization" }
      award: ~
      birthDate: ~
      birthPlace: ~
      brand: { range: "Organization" }
      children: ~
      colleague: ~
      contactPoint: ~
      deathDate: ~
      duns: ~
      email: ~
      familyName: ~
      faxNumber: ~
      follows: ~
      gender: ~
      givenName: ~
      globalLocationNumber: ~
      height: ~
      homeLocation: ~
      honorificPrefix: ~
      honorificSuffix: ~
      isicV4: ~
      jobTitle: ~
      knows: ~
      memberOf: ~
      naics: ~
      nationality: ~
      parent: ~
      relatedTo: ~
      sibling: ~
      sponsor: ~
      taxID: ~
      telephone: ~
      vatID: ~
      weight: ~
      workLocation: ~
      worksFor: ~
  Place:
    properties:
      aggregateRating: ~
      address: ~
      branchCode: ~
      globalLocationNumber: ~
  PostalAddress:
    properties:
      addressCountry: { range: "Text" }
      addressLocality: ~
      addressRegion: ~
      postOfficeBoxNumber: ~
      postalCode: ~
      streetAddress: ~
  Property:
      properties:
        domainIncludes: ~
        inverseOf: ~
        rangeIncludes: ~
        supersededBy: { range: "Class" }
  QAPage:
  Quantity:
  QuantitativeValue:
  Question:
    properties:
      acceptedAnswer: ~
      answerCount: ~
      downvoteCount: ~
      suggestedAnswer: ~
      upvoteCount: ~
  Rating:
    properties:
      bestRating: { range: "Text" }
      ratingCount: { range: "Text" }
      ratingValue: ~
      worstRating: { range: "Text" }
  Recipe:
    properties:
      prepTime: { range: "Text" }
      cookTime: { range: "Text" }
      totalTime: { range: "Text" }
      recipeYield: ~
      nutrition: ~
      recipeIngredient: { range: "Text" }
      recipeInstructions: { range: "Text" }
  Review:
  SearchResultsPage:
  SportsOrganization:
    properties:
      sport: ~
  SportsTeam:
    properties:
        athlete: ~
        coach: ~
  StructuredValue:
  TechArticle:
    properties:
      dependencies: ~
      proficiencyLevel: ~
  Text:
  Thing:
    parent: false
    properties:
      additionalType: ~
      alternateName: ~
      description: ~
      image: { range: "ImageObject" }
      mainEntityOfPage: { range: "WebPage" }
      name: ~
      potentialAction: ~
      sameAs: ~
      url: ~
  URL:
  WebPage:
    properties:
      breadcrumb: { range: "Text" }
      lastReviewed: ~
      primaryImageOfPage: ~
      relatedLink: ~
  WebSite:
annotationGenerators:
  - ApiPlatform\SchemaGenerator\AnnotationGenerator\PhpDocAnnotationGenerator